1、如何仅用递归函数和栈操作逆序一个栈
【题目】
一个栈依次压入1,2,3,4,5那么从栈顶到栈底分别为5,4,3,2,1。将这个栈转置后，从栈顶到栈底为1,2,3,4,5，也就是实现栈中元素的逆序，但是只能用递归函数来实现，而不能用另外的数据结构。
【难度】
尉 ★★☆☆

2、判断一个链表是否为回文结构
【题目】
给定一个链表的头节点head，请判断该链表是不是回文结构。
例如：
1->2->1，返回true。
1->2->2->1，返回true。
15->6->15，返回true。
1->2->3，返回false。

进阶：
如果链表长度为N，时间复杂度达到O(N)，额外空间复杂度达到O(1)。

3、二叉树的序列化和反序列化
【题目】
二叉树被记录成文件的过程，叫做二叉树的序列化，通过文件内容重建原来二叉树的过程叫做二叉树的反序列化。给定一棵二叉树的头节点head，并已知二叉树节点值的类型为32位整型。请设计一种二叉树序列化和反序列化的方案并用代码实现。

4、构造数组的MaxTree
【题目】
定义二叉树节点如下：
public class Node {
public int value;
public Node left;
public Node right;

public Node(int data) {
this.value = data;
}
}

一个数组的MaxTree定义如下：
数组必须没有重复元素；
MaxTree是一棵二叉树，数组的每一个值对应一个二叉树节点；
包括MaxTree树在内并且在其中的每一颗子树上，值最大的节点都是树的头；

给定一个没有重复元素的数组arr，写出生成这个数组的MaxTree的函数，要求如果数组长度为N，时间复杂度O(N)，额外空间复杂度O(N)